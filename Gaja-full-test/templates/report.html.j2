<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GAJA E2E Test Report</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            background: white;
            border-radius: 10px;
            padding: 30px;
            margin-bottom: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        .header h1 {
            color: #2c3e50;
            font-size: 2.5em;
            margin-bottom: 10px;
        }

        .header .subtitle {
            color: #7f8c8d;
            font-size: 1.2em;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .stat-card {
            background: white;
            border-radius: 10px;
            padding: 25px;
            text-align: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s;
        }

        .stat-card:hover {
            transform: translateY(-2px);
        }

        .stat-value {
            font-size: 2.5em;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .stat-label {
            color: #7f8c8d;
            font-size: 1.1em;
        }

        .success {
            color: #27ae60;
        }

        .danger {
            color: #e74c3c;
        }

        .warning {
            color: #f39c12;
        }

        .info {
            color: #3498db;
        }

        .section {
            background: white;
            border-radius: 10px;
            padding: 30px;
            margin-bottom: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .section h2 {
            color: #2c3e50;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #ecf0f1;
        }

        .chart-container {
            text-align: center;
            margin: 20px 0;
        }

        .chart-container img {
            max-width: 100%;
            height: auto;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .scenarios-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        .scenarios-table th,
        .scenarios-table td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #ecf0f1;
        }

        .scenarios-table th {
            background: #f8f9fa;
            font-weight: 600;
            color: #2c3e50;
        }

        .scenarios-table tr:hover {
            background: #f8f9fa;
        }

        .badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.85em;
            font-weight: 500;
            color: white;
        }

        .badge.success {
            background: #27ae60;
        }

        .badge.danger {
            background: #e74c3c;
        }

        .badge.warning {
            background: #f39c12;
        }

        .progress-bar {
            background: #ecf0f1;
            border-radius: 10px;
            height: 20px;
            overflow: hidden;
            margin: 5px 0;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #27ae60, #2ecc71);
            transition: width 0.3s ease;
        }

        .failed-tests {
            margin-top: 20px;
        }

        .failed-test-item {
            background: #fdf2f2;
            border: 1px solid #fecaca;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 10px;
        }

        .failed-test-item h4 {
            color: #dc2626;
            margin-bottom: 10px;
        }

        .failed-test-details {
            font-size: 0.9em;
            color: #6b7280;
        }

        .footer {
            background: white;
            border-radius: 10px;
            padding: 20px;
            text-align: center;
            color: #7f8c8d;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .tag {
            display: inline-block;
            background: #e3f2fd;
            color: #1976d2;
            padding: 2px 8px;
            border-radius: 4px;
            font-size: 0.8em;
            margin: 2px;
        }

        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .header h1 {
                font-size: 2em;
            }

            .scenarios-table {
                font-size: 0.9em;
            }

            .scenarios-table th,
            .scenarios-table td {
                padding: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <h1>ü§ñ GAJA E2E Test Report</h1>
            <div class="subtitle">Generated on {{ timestamp }}</div>
        </div>

        <!-- Statistics -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-value success">{{ stats.passed_scenarios }}</div>
                <div class="stat-label">Passed Scenarios</div>
            </div>
            <div class="stat-card">
                <div class="stat-value danger">{{ stats.failed_scenarios }}</div>
                <div class="stat-label">Failed Scenarios</div>
            </div>
            <div class="stat-card">
                <div class="stat-value info">{{ stats.total_steps }}</div>
                <div class="stat-label">Total Steps</div>
            </div>
            <div class="stat-card">
                <div class="stat-value {{ 'success' if stats.success_rate >= 80 else 'warning' if stats.success_rate >= 60 else 'danger' }}">
                    {{ "%.1f"|format(stats.success_rate) }}%
                </div>
                <div class="stat-label">Success Rate</div>
            </div>
        </div>

        <!-- Execution Summary -->
        <div class="section">
            <h2>üìä Execution Summary</h2>
            <p><strong>Total execution time:</strong> {{ format_duration(stats.execution_time) }}</p>
            <p><strong>Total scenarios:</strong> {{ stats.total_scenarios }}</p>
            <p><strong>Total steps executed:</strong> {{ stats.total_steps }}</p>
            
            {% if stats.best_scenario %}
            <p><strong>Best performing scenario:</strong> {{ stats.best_scenario.name }} 
               ({{ stats.best_scenario.passed_steps }}/{{ stats.best_scenario.total_steps }} steps passed)</p>
            {% endif %}
            
            {% if stats.worst_scenario and stats.worst_scenario.failed_steps > 0 %}
            <p><strong>Worst performing scenario:</strong> {{ stats.worst_scenario.name }} 
               ({{ stats.worst_scenario.failed_steps }} steps failed)</p>
            {% endif %}
        </div>

        <!-- Charts -->
        {% if chart_base64 %}
        <div class="section">
            <h2>üìà Visual Results</h2>
            <div class="chart-container">
                <img src="data:image/png;base64,{{ chart_base64 }}" alt="Test Results Chart">
            </div>
        </div>
        {% endif %}

        <!-- Detailed Results -->
        <div class="section">
            <h2>üìã Detailed Results</h2>
            
            <table class="scenarios-table">
                <thead>
                    <tr>
                        <th>Scenario</th>
                        <th>Steps</th>
                        <th>Status</th>
                        <th>Success Rate</th>
                        <th>Progress</th>
                    </tr>
                </thead>
                <tbody>
                    {% for result in results %}
                    <tr>
                        <td>
                            <strong>{{ result.name }}</strong>
                        </td>
                        <td>{{ result.total_steps }}</td>
                        <td>
                            {% if result.failed_steps == 0 %}
                                <span class="badge success">‚úÖ Passed</span>
                            {% else %}
                                <span class="badge danger">‚ùå Failed</span>
                            {% endif %}
                        </td>
                        <td>
                            {% set success_rate = (result.passed_steps / result.total_steps * 100) if result.total_steps > 0 else 0 %}
                            {{ "%.1f"|format(success_rate) }}%
                        </td>
                        <td>
                            <div class="progress-bar">
                                {% set progress = (result.passed_steps / result.total_steps * 100) if result.total_steps > 0 else 0 %}
                                <div class="progress-fill" style="width: {{ progress }}%"></div>
                            </div>
                            {{ result.passed_steps }}/{{ result.total_steps }}
                        </td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>

        <!-- Failed Tests -->
        {% if failed_tests %}
        <div class="section">
            <h2>‚ùå Failed Tests</h2>
            <div class="failed-tests">
                {% for failed_test in failed_tests %}
                <div class="failed-test-item">
                    <h4>{{ failed_test.scenario }} - Step {{ failed_test.step_index + 1 }}</h4>
                    <div class="failed-test-details">
                        <p><strong>Type:</strong> {{ failed_test.step_type }}</p>
                        {% if failed_test.input_text %}
                        <p><strong>Input:</strong> {{ failed_test.input_text }}{% if failed_test.input_text|length > 97 %}...{% endif %}</p>
                        {% endif %}
                        <p><strong>Error:</strong> {{ failed_test.error }}</p>
                        
                        {% if failed_test.assertions %}
                        <p><strong>Failed assertions:</strong></p>
                        <ul>
                            {% for assertion in failed_test.assertions %}
                            {% if not assertion.passed %}
                            <li>{{ assertion.kind }}: {{ assertion.detail }}</li>
                            {% endif %}
                            {% endfor %}
                        </ul>
                        {% endif %}
                    </div>
                </div>
                {% endfor %}
            </div>
        </div>
        {% endif %}

        <!-- Configuration -->
        <div class="section">
            <h2>‚öôÔ∏è Test Configuration</h2>
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px;">
                <div>
                    <h4>GAJA Server</h4>
                    <p>Base URL: {{ config.gaja.base_url }}</p>
                </div>
                <div>
                    <h4>Voice Settings</h4>
                    <p>TTS Model: {{ config.voice.tts_model }}</p>
                    <p>Voice: {{ config.voice.tts_voice }}</p>
                    <p>Sample Rate: {{ config.voice.sample_rate }}Hz</p>
                </div>
                <div>
                    <h4>Grader</h4>
                    <p>Model: {{ config.grader.model }}</p>
                    <p>Fail Threshold: {{ fail_threshold }}/10</p>
                </div>
                <div>
                    <h4>Runtime</h4>
                    <p>Timeout: {{ config.runtime.default_timeout_s }}s</p>
                    <p>Sleep between steps: {{ config.runtime.between_steps_sleep_ms }}ms</p>
                </div>
            </div>
        </div>

        <!-- Footer -->
        <div class="footer">
            <p>GAJA End-to-End Testing Framework</p>
            <p>Report generated automatically by the test runner</p>
        </div>
    </div>

    <script>
        // Add some interactivity
        document.addEventListener('DOMContentLoaded', function() {
            // Highlight failed test items on hover
            const failedItems = document.querySelectorAll('.failed-test-item');
            failedItems.forEach(item => {
                item.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateX(5px)';
                    this.style.transition = 'transform 0.2s ease';
                });
                item.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateX(0)';
                });
            });

            // Animate progress bars
            const progressBars = document.querySelectorAll('.progress-fill');
            progressBars.forEach(bar => {
                const width = bar.style.width;
                bar.style.width = '0%';
                setTimeout(() => {
                    bar.style.width = width;
                }, 100);
            });

            // Add click to copy functionality for error messages
            const errorElements = document.querySelectorAll('.failed-test-details p');
            errorElements.forEach(elem => {
                elem.addEventListener('click', function() {
                    if (navigator.clipboard) {
                        navigator.clipboard.writeText(this.textContent);
                        const originalText = this.textContent;
                        this.textContent = 'üìã Copied to clipboard!';
                        setTimeout(() => {
                            this.textContent = originalText;
                        }, 1000);
                    }
                });
            });
        });
    </script>
</body>
</html>
